{"version":3,"sources":["recoil/atoms.js","recoil/selectors.js","util/arrayUtils.js","components/rules/Skill.js","components/rules/SkillList.js","components/rules/Talent.js","components/rules/TalentList.js","components/FrontPage.js","components/generic/SearchForm.js","components/rules/TalentsPage.js","components/rules/SkillsPage.js","components/rules/Spells.js","App.js","index.js"],"names":["talentsJSON","require","skillsJSON","spellsJSON","talentState","atom","key","default","talents","skillState","skills","spellGroupState","groups","selectedTalents","selectorFamily","get","filterType","list","filter","item","isSelected","selectedSkills","replaceItemAtIndex","array","index","newValue","slice","Skill","skill","useRecoilState","skillList","setSkillList","id","name","type","checked","onChange","newList","desc","map","child","indexOf","example","options","specialisations","SkillList","s","Talent","talent","talentList","setTalentList","max","tests","TalentList","t","FrontPage","useRecoilValue","length","SearchForm","searchInput","setSearchInput","placeholder","onSubmit","e","preventDefault","value","target","Talents","useState","filteredTalents","toLowerCase","includes","Skills","filteredSkills","Spells","spellGroups","Group","group","ingredients","mapAllSpells","spells","mapSpells","Spell","spell","CN","range","duration","App","basename","Navbar","Brand","as","Link","to","Collapse","Nav","className","exact","path","SkillsPage","TalentsPage","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.145c35f2.chunk.js","sourcesContent":["import { atom } from 'recoil'\r\n\r\nconst talentsJSON = require('../data/talents.json')\r\nconst skillsJSON = require('../data/skills.json')\r\nconst spellsJSON = require('../data/spells.json')\r\n\r\nexport const talentState = atom({\r\n  key: 'talent state',\r\n  default: talentsJSON.talents\r\n})\r\n\r\nexport const skillState = atom({\r\n  key: 'skill state',\r\n  default: skillsJSON.skills\r\n})\r\n\r\nexport const spellGroupState = atom({\r\n  key: 'spell state',\r\n  default: spellsJSON.groups\r\n})\r\n","import { selectorFamily } from 'recoil'\r\nimport { skillState, talentState } from './atoms'\r\n\r\n// Returns list of talents depending on selected 'mode'\r\n// Default is everything\r\nexport const selectedTalents = selectorFamily({\r\n  key: 'selectedTalents',\r\n  get: (filterType) => ({ get }) => {\r\n    const list = get(talentState)\r\n\r\n    switch (filterType) {\r\n      case 'Selected':\r\n        return list.filter((item) => item.isSelected)\r\n      // TODO: searchinput state to atoms.js\r\n      // Reset on rerendering Talents -page?\r\n      /*\r\n      case 'Search':\r\n        const searchInput = get(talentListSearchInput)\r\n        return list.filter(t =>\r\n          t.name.toLowerCase().includes(searchInput.toLowerCase()))\r\n      */\r\n      default:\r\n        return list\r\n    }\r\n  }\r\n})\r\n\r\nexport const selectedSkills = selectorFamily({\r\n  key:'selectedSkills',\r\n  get: (filterType) => ({ get}) => {\r\n    const list = get(skillState)\r\n\r\n    switch(filterType) {\r\n      case 'Selected':\r\n        return list.filter((item) => item.isSelected)\r\n      default: \r\n        return list  \r\n    }\r\n  }\r\n})\r\n","/**\r\n * Generic utility function for filtering an array with given input\r\n * @params array {array} Initial array\r\n * @params filterInput {string} String that is compared to strings in array \r\n * @returns filtered array containing strings from initial array that include filterInput\r\n */\r\nexport function arrayFilter(array, filterInput) {\r\n  return array.filter(str => str.toLowerCase().includes(filterInput.toLowerCase()))\r\n}\r\n\r\n\r\nexport function replaceItemAtIndex(array, index, newValue) {\r\n  return [...array.slice(0, index), newValue, ...array.slice(index + 1)]\r\n}\r\n","import React from 'react'\r\nimport { useRecoilState } from 'recoil'\r\nimport { skillState } from '../../recoil/atoms'\r\nimport { replaceItemAtIndex } from '../../util/arrayUtils'\r\n\r\nconst Skill = ({ skill }) => {\r\n  const [skillList, setSkillList] = useRecoilState(skillState)\r\n\r\n  const toggleSelected = () => {\r\n    const newList = replaceItemAtIndex(skillList, skill.id, {\r\n      ...skill,\r\n      isSelected: !skill.isSelected,\r\n    })\r\n\r\n    setSkillList(newList)\r\n  }\r\n\r\n  const mapDesc = (array) => array.map(child =>\r\n    <p key={skill.id + array.indexOf(child)}>{child}</p>)\r\n\r\n  return (\r\n    <div key={skill.id}>\r\n      <h4>{skill.name}</h4>\r\n      <input type=\"checkbox\"\r\n        checked={skill.isSelected}\r\n        onChange={toggleSelected}\r\n      />\r\n      {mapDesc(skill.desc)}\r\n      <p>{skill.example}</p>\r\n      <p>{skill.options}</p>\r\n      <p>{skill.specialisations}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Skill\r\n","import React from 'react'\r\nimport Skill from './Skill'\r\n\r\nconst SkillList = ({ skills }) => {\r\n  return (\r\n    <div>\r\n      {skills.map(s =>\r\n        <Skill skill={s} key={s.id} />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SkillList\r\n","import React from 'react'\r\nimport { useRecoilState } from 'recoil'\r\nimport { talentState } from '../../recoil/atoms'\r\nimport { replaceItemAtIndex } from '../../util/arrayUtils'\r\n\r\nconst Talent = ({ talent }) => {\r\n  const [talentList, setTalentList] = useRecoilState(talentState)\r\n\r\n  const toggleSelected = () => {\r\n    const newList = replaceItemAtIndex(talentList, talent.id, {\r\n      ...talent,\r\n      isSelected: !talent.isSelected,\r\n    })\r\n\r\n    setTalentList(newList)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h4>{talent.name}</h4>\r\n      <input type=\"checkbox\"\r\n        checked={talent.isSelected}\r\n        onChange={toggleSelected}\r\n      />\r\n      <p>{talent.max}</p>\r\n      <p>{talent.tests}</p>\r\n      <p>{talent.desc}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Talent\r\n","import React from 'react'\r\n\r\nimport Talent from './Talent'\r\n\r\nconst TalentList = ({ talents }) => {\r\n  return (\r\n    <div>\r\n      {talents.map(t => <Talent talent={t} key={t.id} />)}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TalentList\r\n","import React from 'react'\r\n\r\nimport { useRecoilValue } from 'recoil'\r\nimport { selectedTalents, selectedSkills } from '../recoil/selectors'\r\n\r\nimport SkillList from './rules/SkillList'\r\nimport TalentList from './rules/TalentList'\r\n\r\nconst FrontPage = () => {\r\n  const talents = useRecoilValue(selectedTalents('Selected'))\r\n  const skills = useRecoilValue(selectedSkills('Selected'))\r\n\r\n  return (\r\n    <div>\r\n      <h3>Warhammer Fantasy RPG utilities</h3>\r\n      <h4>Favorites:</h4>\r\n      {talents.length === 0 ?\r\n        <p>No talents selected</p> :\r\n        <TalentList talents={talents} />\r\n      }\r\n      {skills.length === 0 ?\r\n        <p>No skills selected</p> :\r\n        <SkillList skills={skills} />\r\n      }\r\n      <p>Selecting spells in todo :P</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FrontPage\r\n","import React from 'react'\r\n\r\nconst SearchForm = ({ searchInput, setSearchInput, placeholder }) => {\r\n  return (\r\n    <div>\r\n      <form onSubmit={e => e.preventDefault()}>\r\n        <input type='search'\r\n          placeholder={placeholder}\r\n          value={searchInput}\r\n          onChange={e => setSearchInput(e.target.value)}\r\n        />\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchForm","import React, { useState } from 'react'\r\nimport { useRecoilValue } from 'recoil'\r\nimport { talentState } from '../../recoil/atoms'\r\n\r\nimport SearchForm from '../generic/SearchForm'\r\nimport TalentList from './TalentList'\r\n\r\nconst Talents = () => {\r\n  const talentList = useRecoilValue(talentState)\r\n  const [searchInput, setSearchInput] = useState('')\r\n\r\n  const filteredTalents = talentList.filter(t =>\r\n    t.name.toLowerCase().includes(searchInput.toLowerCase()))\r\n\r\n  return (\r\n    <div>\r\n      <SearchForm\r\n        searchInput={searchInput}\r\n        setSearchInput={setSearchInput}\r\n        placeholder='Search Talents by name'\r\n      />\r\n      <TalentList talents={filteredTalents} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Talents\r\n","import React, { useState } from 'react'\r\nimport { useRecoilValue } from 'recoil'\r\nimport { skillState } from '../../recoil/atoms'\r\n\r\nimport SearchForm from '../generic/SearchForm'\r\nimport SkillList from './SkillList'\r\n\r\n// TODO: Add Table property to skills.json where needed\r\nconst Skills = () => {\r\n  const skillList = useRecoilValue(skillState)\r\n  const [searchInput, setSearchInput] = useState('')\r\n\r\n  const filteredSkills = skillList.filter(s =>\r\n    s.name.toLowerCase().includes(searchInput.toLowerCase()))\r\n\r\n  return (\r\n    <div>\r\n      <SearchForm\r\n        searchInput={searchInput}\r\n        setSearchInput={setSearchInput}\r\n        placeholder='Search Skills by name'\r\n      />\r\n      <SkillList skills={filteredSkills} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Skills\r\n","import React, { useState } from 'react'\r\nimport { useRecoilValue } from 'recoil'\r\n\r\nimport { spellGroupState } from '../../recoil/atoms'\r\nimport SearchForm from '../generic/SearchForm'\r\n\r\n// TODO: selecting school of magic\r\n// TODO: CSS for spell groups\r\n// TODO: CSS for spells\r\n// TODO: Spell component & Spell group component to separate file?\r\nconst Spells = () => {\r\n  const spellGroups = useRecoilValue(spellGroupState)\r\n  const [searchInput, setSearchInput] = useState('')\r\n\r\n  const Group = ({ group }) =>\r\n    group.name.toLowerCase().includes(searchInput.toLowerCase()) ?\r\n      <div>\r\n        <h3>{group.name}</h3>\r\n        <p>{group.desc}</p>\r\n        <p>{group.ingredients}</p>\r\n        {mapAllSpells(group.spells)}\r\n      </div>\r\n      :\r\n      mapSpells(group.spells)\r\n\r\n  const Spell = ({ spell }) =>\r\n    <div>\r\n      <h4>{spell.name}</h4>\r\n      <p>{spell.CN}</p>\r\n      <p>{spell.range}</p>\r\n      <p>{spell.target}</p>\r\n      <p>{spell.duration}</p>\r\n      <p>{spell.desc}</p>\r\n    </div>\r\n\r\n  const mapAllSpells = (spells) => spells.map(spell => <Spell spell={spell} key={spell.name} />)\r\n\r\n  const mapSpells = (spells) => spells.map(spell =>\r\n    spell.name.toLowerCase().includes(searchInput.toLowerCase()) ?\r\n      <Spell spell={spell} key={spell.name} />\r\n      : null)\r\n\r\n  const mapSpellGroups = () => spellGroups.map(group => <Group group={group} key={group.name} />)\r\n\r\n  return (\r\n    <div>\r\n      <SearchForm\r\n        searchInput={searchInput}\r\n        setSearchInput={setSearchInput}\r\n        placeholder='Search Spells by name'\r\n      />\r\n      {mapSpellGroups()}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Spells\r\n","import React from 'react'\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from 'react-router-dom'\r\n\r\nimport { Navbar, Nav } from 'react-bootstrap'\r\nimport './index.css'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nimport { RecoilRoot } from 'recoil'\r\n\r\nimport FrontPage from './components/FrontPage'\r\nimport TalentsPage from './components/rules/TalentsPage'\r\nimport SkillsPage from './components/rules/SkillsPage'\r\nimport Spells from './components/rules/Spells'\r\n\r\nconst App = () => {\r\n  return (\r\n    <RecoilRoot>\r\n      <Router basename=\"/\">\r\n        <Navbar>\r\n          <Navbar.Brand as={Link} to=\"/\">\r\n            WFRPG\r\n          </Navbar.Brand>\r\n          <Navbar.Collapse>\r\n            <Nav>\r\n              <Link to=\"/talents\" className=\"nav-link\">Talents</Link>\r\n              <Link to=\"/skills\" className=\"nav-link\">Skills</Link>\r\n              <Link to=\"/spells\" className=\"nav-link\">Spells</Link>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n\r\n        <Switch>\r\n          <Route exact path=\"/\"><FrontPage /></Route>\r\n          <Route path=\"/skills\"><SkillsPage /></Route>\r\n          <Route path=\"/talents\"><TalentsPage /></Route>\r\n          <Route path=\"/spells\"><Spells /></Route>\r\n        </Switch>\r\n      </Router>\r\n    </RecoilRoot>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n  <App />, document.getElementById('root')\r\n)"],"sourceRoot":""}