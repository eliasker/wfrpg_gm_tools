{"version":3,"sources":["recoil/atoms.js","recoil/selectors.js","util/arrayUtils.js","components/rules/Skill.js","components/rules/SkillList.js","components/rules/Talent.js","components/rules/TalentList.js","util/localStorageUtil.js","components/FrontPage.js","components/generic/SearchForm.js","components/rules/TalentsPage.js","components/rules/SkillsPage.js","components/rules/Spells.js","App.js","index.js"],"names":["talentsJSON","require","skillsJSON","spellsJSON","talentState","atom","key","default","talents","skillState","skills","spellGroupState","groups","prevLoadedState","selectedTalents","selectorFamily","get","filterType","list","filter","item","isSelected","selectedSkills","replaceItemAtIndex","array","index","newValue","slice","Skill","skill","useRecoilState","skillList","setSkillList","useState","expanded","setExpanded","className","onClick","name","type","checked","onChange","newList","id","desc","map","child","indexOf","example","options","specialisations","SkillList","s","Talent","talent","talentList","setTalentList","max","tests","TalentList","t","getPrevState","localStorage","getItem","FrontPage","initialized","setInitialized","useRecoilValue","useEffect","loadSaved","updateArray","stateSetter","listedIds","forEach","parseInt","undefined","e","console","error","talentIds","skillIds","newSkillList","split","talentString","setItem","skillString","saveState","clear","SearchForm","searchInput","setSearchInput","placeholder","onSubmit","preventDefault","value","target","Talents","filteredTalents","toLowerCase","includes","Skills","filteredSkills","Spells","spellGroups","Group","group","ingredients","mapAllSpells","spells","mapSpells","Spell","spell","CN","range","duration","App","basename","Navbar","Brand","as","Link","to","Collapse","Nav","exact","path","SkillsPage","TalentsPage","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cf33b790.chunk.js","sourcesContent":["import { atom } from 'recoil'\r\n\r\nconst talentsJSON = require('../data/talents.json')\r\nconst skillsJSON = require('../data/skills.json')\r\nconst spellsJSON = require('../data/spells.json')\r\n\r\nexport const talentState = atom({\r\n  key: 'talentState',\r\n  default: talentsJSON.talents\r\n})\r\n\r\nexport const skillState = atom({\r\n  key: 'skillState',\r\n  default: skillsJSON.skills\r\n})\r\n\r\nexport const spellGroupState = atom({\r\n  key: 'spellState',\r\n  default: spellsJSON.groups\r\n})\r\n\r\nexport const prevLoadedState = atom({\r\n  key: 'prevLoadedState',\r\n  default: false\r\n})\r\n","import { selectorFamily } from 'recoil'\r\nimport { skillState, talentState } from './atoms'\r\n\r\n// Returns list of talents depending on selected 'mode'\r\n// Default is everything\r\nexport const selectedTalents = selectorFamily({\r\n  key: 'selectedTalents',\r\n  get: (filterType) => ({ get }) => {\r\n    const list = get(talentState)\r\n\r\n    switch (filterType) {\r\n      case 'Selected':\r\n        return list.filter((item) => item.isSelected)\r\n      // TODO: searchinput state to atoms.js\r\n      // Reset on rerendering Talents -page?\r\n      /*\r\n      case 'Search':\r\n        const searchInput = get(talentListSearchInput)\r\n        return list.filter(t =>\r\n          t.name.toLowerCase().includes(searchInput.toLowerCase()))\r\n      */\r\n      default:\r\n        return list\r\n    }\r\n  }\r\n})\r\n\r\nexport const selectedSkills = selectorFamily({\r\n  key:'selectedSkills',\r\n  get: (filterType) => ({ get}) => {\r\n    const list = get(skillState)\r\n\r\n    switch(filterType) {\r\n      case 'Selected':\r\n        return list.filter((item) => item.isSelected)\r\n      default: \r\n        return list  \r\n    }\r\n  }\r\n})\r\n","/**\r\n * Generic utility function for filtering an array with given input\r\n * @params array {array} Initial array\r\n * @params filterInput {string} String that is compared to strings in array \r\n * @returns filtered array containing strings from initial array that include filterInput\r\n */\r\nexport function arrayFilter(array, filterInput) {\r\n  return array.filter(str => str.toLowerCase().includes(filterInput.toLowerCase()))\r\n}\r\n\r\n\r\nexport function replaceItemAtIndex(array, index, newValue) {\r\n  return [...array.slice(0, index), newValue, ...array.slice(index + 1)]\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useRecoilState } from 'recoil'\r\nimport { skillState } from '../../recoil/atoms'\r\nimport { replaceItemAtIndex } from '../../util/arrayUtils'\r\n\r\nconst Skill = ({ skill }) => {\r\n  const [skillList, setSkillList] = useRecoilState(skillState)\r\n  const [expanded, setExpanded] = useState(false)\r\n\r\n  const toggleSelected = () => {\r\n    const newList = replaceItemAtIndex(skillList, skill.id, {\r\n      ...skill,\r\n      isSelected: !skill.isSelected,\r\n    })\r\n\r\n    setSkillList(newList)\r\n  }\r\n\r\n  const mapDesc = (array) => array.map(child =>\r\n    <p key={skill.id + array.indexOf(child)}>{child}</p>)\r\n\r\n  return (\r\n    <div className=\"item-container\">\r\n      <div className=\"item-header-container\">\r\n        <h4 onClick={() => setExpanded(!expanded)}\r\n          className=\"clickable\">{skill.name}</h4>\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={skill.isSelected}\r\n          onChange={toggleSelected}\r\n        />\r\n      </div>\r\n      {expanded ?\r\n        <>\r\n          {mapDesc(skill.desc)}\r\n          <p>{skill.example}</p>\r\n          <p>{skill.options}</p>\r\n          <p>{skill.specialisations}</p>\r\n        </>\r\n        : null}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Skill\r\n","import React from 'react'\r\nimport Skill from './Skill'\r\n\r\nconst SkillList = ({ skills }) => {\r\n  return (\r\n    <div>\r\n      <h4>Skill list:</h4>\r\n      {skills.map(s =>\r\n        <Skill skill={s} key={s.id} />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SkillList\r\n","import React, { useState } from 'react'\r\nimport { useRecoilState } from 'recoil'\r\nimport { talentState } from '../../recoil/atoms'\r\nimport { replaceItemAtIndex } from '../../util/arrayUtils'\r\n\r\nconst Talent = ({ talent }) => {\r\n  const [talentList, setTalentList] = useRecoilState(talentState)\r\n  const [expanded, setExpanded] = useState(false)\r\n\r\n  const toggleSelected = () => {\r\n    const newList = replaceItemAtIndex(talentList, talent.id, {\r\n      ...talent,\r\n      isSelected: !talent.isSelected,\r\n    })\r\n\r\n    setTalentList(newList)\r\n  }\r\n\r\n  return (\r\n    <div className=\"item-container\">\r\n      <div className=\"item-header-container\">\r\n        <h4 onClick={() => setExpanded(!expanded)}\r\n          className=\"clickable\">{talent.name}</h4>\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={talent.isSelected}\r\n          onChange={toggleSelected}\r\n        />\r\n      </div>\r\n      {expanded ?\r\n        <>\r\n          <p>{talent.max}</p>\r\n          <p>{talent.tests}</p>\r\n          <p>{talent.desc}</p>\r\n        </>\r\n        : null}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Talent\r\n","import React from 'react'\r\n\r\nimport Talent from './Talent'\r\n\r\nconst TalentList = ({ talents }) => {\r\n  return (\r\n    <div>\r\n      <h4>Talent list:</h4>\r\n      {talents.map(t => <Talent talent={t} key={t.id} />)}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TalentList\r\n","//TODO: --> const saveState = (key, value) => {}\r\nexport const saveState = (talents, skills) => {\r\n  if (talents !== [] || talents !== undefined) {\r\n    var talentString = ''\r\n    talents.map(t => talentString += `${t.id} `)\r\n    localStorage.setItem('saved_talents', talentString)\r\n  }\r\n  if (skills !== [] || skills !== undefined) {\r\n    var skillString = ''\r\n    skills.map(s => skillString += `${s.id} `)\r\n    localStorage.setItem('saved_skills', skillString)\r\n  }\r\n  // Window.localStorage.setItem('spellsString', spellsString)\r\n}\r\n\r\nexport const getPrevState = key => {\r\n  return localStorage.getItem(key)\r\n}\r\n\r\nexport const clearState = () => localStorage.clear()\r\n","import React, { useEffect } from 'react'\r\n\r\nimport { useRecoilValue, useRecoilState } from 'recoil'\r\nimport { talentState, skillState, prevLoadedState } from '../recoil/atoms'\r\nimport { selectedTalents, selectedSkills } from '../recoil/selectors'\r\n\r\nimport SkillList from './rules/SkillList'\r\nimport TalentList from './rules/TalentList'\r\n\r\nimport { saveState, getPrevState, clearState } from '../util/localStorageUtil'\r\nimport { replaceItemAtIndex } from '../util/arrayUtils'\r\n\r\n//TODO: Remove testing buttons 'Save', 'Load' & 'Clear'\r\n//TODO: Selecting items modifies save str\r\nconst FrontPage = () => {\r\n  const [initialized, setInitialized] = useRecoilState(prevLoadedState)\r\n  const [talentList, setTalentList] = useRecoilState(talentState)\r\n  const [skillList, setSkillList] = useRecoilState(skillState)\r\n  const talents = useRecoilValue(selectedTalents('Selected'))\r\n  const skills = useRecoilValue(selectedSkills('Selected'))\r\n\r\n  useEffect(() => {\r\n    if (!initialized) {\r\n      loadSaved()\r\n      setInitialized(true)\r\n    }\r\n    //TODO:FIXME:\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  const updateArray = (array, stateSetter, listedIds) => {\r\n    listedIds.forEach(id => {\r\n      const index = parseInt(id)\r\n      if (array[index] !== undefined) {\r\n        try {\r\n          array = replaceItemAtIndex(array, index, {\r\n            ...array[index],\r\n            isSelected: true\r\n          })\r\n        } catch (e) { console.error(e) }\r\n      }\r\n    })\r\n    stateSetter(array)\r\n  }\r\n\r\n  const loadSaved = () => {\r\n    const talentIds = getPrevState('saved_talents')\r\n    const skillIds = getPrevState('saved_skills')\r\n    var newTalentList = talentList\r\n    var newSkillList = skillList\r\n    if (talentIds !== null && talentIds !== '') {\r\n      updateArray(newTalentList, setTalentList, talentIds.split(' '))\r\n    }\r\n    if (skillIds !== null && skillIds !== '') {\r\n      updateArray(newSkillList, setSkillList, skillIds.split(' '))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"content-container\">\r\n      <h4>Favorites:</h4>\r\n      <div className=\"button-container\">\r\n        <button onClick={() => saveState(talents, skills)}>Save</button>\r\n        <button onClick={() => loadSaved()}>Load</button>\r\n        <button onClick={() => clearState()}>Clear</button>\r\n      </div>\r\n      <TalentList talents={talents} />\r\n      <SkillList skills={skills} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FrontPage\r\n","import React from 'react'\r\n\r\nconst SearchForm = ({ searchInput, setSearchInput, placeholder }) => {\r\n  return (\r\n    <div className=\"search-container\">\r\n      <form onSubmit={e => e.preventDefault()}>\r\n        <input type='search'\r\n          placeholder={placeholder}\r\n          value={searchInput}\r\n          onChange={e => setSearchInput(e.target.value)}\r\n        />\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchForm","import React, { useState } from 'react'\r\nimport { useRecoilValue } from 'recoil'\r\nimport { talentState } from '../../recoil/atoms'\r\n\r\nimport SearchForm from '../generic/SearchForm'\r\nimport TalentList from './TalentList'\r\n\r\nconst Talents = () => {\r\n  const talentList = useRecoilValue(talentState)\r\n  const [searchInput, setSearchInput] = useState('')\r\n\r\n  const filteredTalents = talentList.filter(t =>\r\n    t.name.toLowerCase().includes(searchInput.toLowerCase()))\r\n\r\n  return (\r\n    <div className=\"content-container\">\r\n      <SearchForm\r\n        searchInput={searchInput}\r\n        setSearchInput={setSearchInput}\r\n        placeholder='Search Talents by name'\r\n      />\r\n      <TalentList talents={filteredTalents} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Talents\r\n","import React, { useState } from 'react'\r\nimport { useRecoilValue } from 'recoil'\r\nimport { skillState } from '../../recoil/atoms'\r\n\r\nimport SearchForm from '../generic/SearchForm'\r\nimport SkillList from './SkillList'\r\n\r\n// TODO: Add Table property to skills.json where needed\r\nconst Skills = () => {\r\n  const skillList = useRecoilValue(skillState)\r\n  const [searchInput, setSearchInput] = useState('')\r\n\r\n  const filteredSkills = skillList.filter(s =>\r\n    s.name.toLowerCase().includes(searchInput.toLowerCase()))\r\n\r\n  return (\r\n    <div className=\"content-container\">\r\n      <SearchForm\r\n        searchInput={searchInput}\r\n        setSearchInput={setSearchInput}\r\n        placeholder='Search Skills by name'\r\n      />\r\n      <SkillList skills={filteredSkills} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Skills\r\n","import React, { useState } from 'react'\r\nimport { useRecoilValue } from 'recoil'\r\n\r\nimport { spellGroupState } from '../../recoil/atoms'\r\nimport SearchForm from '../generic/SearchForm'\r\n\r\n// TODO: selecting school of magic\r\n// TODO: CSS for spell groups\r\n// TODO: CSS for spells\r\n// TODO: Spell component & Spell group component to separate file?\r\nconst Spells = () => {\r\n  const spellGroups = useRecoilValue(spellGroupState)\r\n  const [searchInput, setSearchInput] = useState('')\r\n\r\n  const Group = ({ group }) =>\r\n    group.name.toLowerCase().includes(searchInput.toLowerCase()) ?\r\n      <div>\r\n        <h4>{group.name}</h4>\r\n        <p>{group.desc}</p>\r\n        <p>{group.ingredients}</p>\r\n        {mapAllSpells(group.spells)}\r\n      </div>\r\n      :\r\n      mapSpells(group.spells)\r\n\r\n  const Spell = ({ spell }) => {\r\n    const [expanded, setExpanded] = useState(false)\r\n    return (\r\n      <div className=\"item-container\">\r\n        <div className=\"item-header-container\">\r\n          <h4 onClick={() => setExpanded(!expanded)}\r\n            className=\"clickable\">{spell.name}</h4>\r\n        </div>\r\n        {expanded ?\r\n          <>\r\n            <p>{spell.CN}</p>\r\n            <p>{spell.range}</p>\r\n            <p>{spell.target}</p>\r\n            <p>{spell.duration}</p>\r\n            <p>{spell.desc}</p>\r\n          </>\r\n          : null}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const mapAllSpells = (spells) => spells.map(spell =>\r\n    <Spell spell={spell} key={spell.name} />)\r\n\r\n  const mapSpells = (spells) => spells.map(spell =>\r\n    spell.name.toLowerCase().includes(searchInput.toLowerCase()) ?\r\n      <Spell spell={spell} key={spell.name} />\r\n      : null)\r\n\r\n  const mapSpellGroups = () => spellGroups.map(group => <Group group={group} key={group.name} />)\r\n\r\n  return (\r\n    <div className=\"content-container\">\r\n      <SearchForm\r\n        searchInput={searchInput}\r\n        setSearchInput={setSearchInput}\r\n        placeholder='Search Spells by name'\r\n      />\r\n      <h4>Spells:</h4>\r\n      {mapSpellGroups()}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Spells\r\n","import React from 'react'\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from 'react-router-dom'\r\n\r\nimport { Navbar, Nav } from 'react-bootstrap'\r\nimport './index.css'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nimport { RecoilRoot } from 'recoil'\r\n\r\nimport FrontPage from './components/FrontPage'\r\nimport TalentsPage from './components/rules/TalentsPage'\r\nimport SkillsPage from './components/rules/SkillsPage'\r\nimport Spells from './components/rules/Spells'\r\n\r\nconst App = () => {\r\n  return (\r\n    <RecoilRoot>\r\n      <Router basename=\"/\">\r\n        <Navbar>\r\n          <Navbar.Brand as={Link} to=\"/\">\r\n            WFRPG\r\n          </Navbar.Brand>\r\n          <Navbar.Collapse>\r\n            <Nav>\r\n              <Link to=\"/talents\" className=\"nav-link navitems\">Talents</Link>\r\n              <Link to=\"/skills\" className=\"nav-link navitems\">Skills</Link>\r\n              <Link to=\"/spells\" className=\"nav-link navitems\">Spells</Link>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n\r\n        <Switch>\r\n          <Route exact path=\"/\"><FrontPage /></Route>\r\n          <Route path=\"/skills\"><SkillsPage /></Route>\r\n          <Route path=\"/talents\"><TalentsPage /></Route>\r\n          <Route path=\"/spells\"><Spells /></Route>\r\n        </Switch>\r\n      </Router>\r\n    </RecoilRoot>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n  <App />, document.getElementById('root')\r\n)"],"sourceRoot":""}